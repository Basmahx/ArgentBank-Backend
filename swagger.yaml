swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  # User Module Endpoints
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  # Transaction Module Endpoints
  /user/account/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get all transactions for an account
      description: Returns a list of transactions for a given account
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "404":
          description: Account not found
        "500":
          description: Internal Server Error

  /user/account/{accountId}/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get transaction details
      description: Get type, category, and note for a specific transaction
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
        - name: transactionId
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details
          schema:
            $ref: "#/definitions/TransactionDetails"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction Details
      description: Update the category or note of a specific transaction
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
        - name: transactionId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdate"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid input
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    in: header
    name: Authorization

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  AccountTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            description:
              type: string
            amount:
              type: number
            type:
              type: string
              enum: [debit, credit]
            date:
              type: string
              format: date-time
            category:
              type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
        format: float
      balance:
        type: number
        format: float

  TransactionDetails:
    allOf:
      - $ref: "#/definitions/AccountTransactionsResponse/body/items"
      - type: object
        properties:
          type:
            type: string
            description: e.g., electronic, check, wire
          category:
            type: string
            description: e.g., Groceries, Utilities, etc.
          note:
            type: string
            description: Optional user note

  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        enum:
          - Groceries
          - Utilities
          - Rent
          - Entertainment
          - Travel
          - Health
          - Other
        description: Must be one of the predefined categories
      note:
        type: string
        description: Optional note. Send empty string to delete.
