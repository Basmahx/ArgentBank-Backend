swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /transactions:
    get:
      summary: Obtenir toutes les transactions du mois en cours, groupées par compte
      description: Retourne la liste des transactions de l'utilisateur pour le mois en cours, organisées par compte.
      produces:
        - application/json
      parameters:
        - name: userId
          in: query
          required: true
          type: string
          description: ID de l'utilisateur
      responses:
        "200":
          description: Succès - Retourne la liste des transactions groupées
        "401":
          description: Non autorisé
        "500":
          description: Erreur serveur

  /transactions/{transactionId}:
    get:
      summary: Obtenir les détails d'une transaction
      description: Retourne les détails d'une transaction spécifique
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID de la transaction
      responses:
        "200":
          description: Succès - Retourne les détails de la transaction
        "404":
          description: Transaction non trouvée
        "500":
          description: Erreur serveur

    put:
      summary: Modifier la catégorie ou la note d'une transaction
      description: Met à jour la catégorie ou la note d'une transaction existante
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID de la transaction
        - in: body
          name: body
          description: Champs à modifier (catégorie et/ou note)
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdate"
      responses:
        "200":
          description: Transaction mise à jour avec succès
        "400":
          description: Données invalides
        "404":
          description: Transaction non trouvée
        "500":
          description: Erreur serveur

  /transactions/{transactionId}/note:
    delete:
      summary: Supprimer la note d'une transaction
      description: Permet de supprimer uniquement la note d'une transaction sans affecter les autres informations.
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID de la transaction
      responses:
        "200":
          description: Note supprimée avec succès
        "404":
          description: Transaction non trouvée
        "500":
          description: Erreur serveur

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name

  Login:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
